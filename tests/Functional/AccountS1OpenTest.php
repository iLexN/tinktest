<?php

namespace Tests\Functional;

class AccountS1OpenTest extends BaseTestCase
{

    public function testOpenAccount()
    {
        $ar = ['name'=>'account name'];
        $response = $this->runApp('POST', '/1/account',$ar);

        $this->assertEquals(200, $response->getStatusCode());
        $result = \json_decode((string)$response->getBody(),1);
        $this->assertEquals('success', $result['status']);
        $this->assertEquals($ar['name'], $result['data']['name']);
        $this->assertEquals(0, $result['data']['balance']);
        $this->assertEquals(1, $result['data']['ower']);
    }

    public function testOpenAccountWithBalance()
    {
        $ar = ['name'=>'account name2',
               'balance'=>'1000'
            ];
        $response = $this->runApp('POST', '/1/account',$ar);

        $this->assertEquals(200, $response->getStatusCode());
        $result = \json_decode((string)$response->getBody(),1);
        $this->assertEquals('success', $result['status']);
        $this->assertEquals($ar['name'], $result['data']['name']);
        $this->assertEquals($ar['balance'], $result['data']['balance']);
        $this->assertEquals(1, $result['data']['ower']);
    }

    public function testOpenAccountNoName()
    {
        $ar = [];
        $response = $this->runApp('POST', '/1/account',$ar);

        $this->assertEquals(200, $response->getStatusCode());
        $result = \json_decode((string)$response->getBody(),1);
        $this->assertEquals('Name is required', $result['name'][0]);
    }
    
    public function testOpenAccountNoOwner()
    {
        $ar = [];
        $response = $this->runApp('POST', '/1/account',$ar);

        $this->assertEquals(200, $response->getStatusCode());
        $result = \json_decode((string)$response->getBody(),1);
        $this->assertEquals('owner not exists', $result['status']);
    }
}